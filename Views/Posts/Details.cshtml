@using MyBlog.Services
@using Microsoft.AspNetCore.Identity
@using MyBlog.Enums
@using MyBlog.Models
@using MyBlog.ViewModels

@inject IImageService _imageService
@inject UserManager<BlogUser> _userManager
@model PostDetailViewModel

<article>
    <div class="row">
        <div class="col-9 border-right">
            @Html.Raw(Model.Post.Content)
        </div>
        <div class="col-3 text-center font-weight-bold h6">
            <div class="card">
                <img class="card-img-top" src="~/assets/img/tags.png" alt="Tags...">
                <div class="card-body">
                    <h4 class="card-title">SYSTEM TAGS</h4>
                    <div class="tagView">
                        @foreach (var tag in Model.Tags)
                        {
                            <a asp-action="TagIndex" asp-route-tag="@tag" class="mb-1 btn btn-sm btn-warning btn-outline-dark">#@tag</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

</article>

<article>
    <hr />
    <h3 class="text-center font-weight-bold">Tags</h3>
    <div class="col text-center">
        @foreach (var tag in Model.Post.Tags.ToList())
        {
            <a asp-action="TagIndex" asp-route-tag="@tag.Text.ToLower()" class="mb-1 btn btn-sm btn-warning btn-outline-dark">#@tag.Text</a>
        }
    </div>
    <hr />
</article>


<div>
    @if (User.Identity.IsAuthenticated)
    {
        <form asp-action="Create" asp-controller="Comments" method="post">
            @Html.Hidden("PostId", Model.Post.Id)
            @Html.Hidden("Slug", Model.Post.Slug)

            <div class="form-group">
                <label class="h2 control-label font-weight-bold">Add Comment</label>
                <textarea name="body" class="form-control" rows="10"></textarea>
            </div>

            <button type="submit" class="btn btn-dark btn-block btn-sm">Submit</button>
        </form>
    }
    else
    {
        <a class="btn btn-block btn-sm btn-dark" asp-area="Identity" asp-page="/Account/Login">
            Login to add comments
        </a>
    }

    <br />
    <hr class="card-hr" />
    <br />

    <a id="commentSection" class="btn btn-sm btn-dark btn-block mb-2">@Model.Post.Comments.Count COMMENT(S)</a>

    @foreach (var comment in Model.Post.Comments.OrderByDescending(c => c.Created))
    {
        <div class="media p-3 mb-2 bg-cf media-border">
            <img src="@_imageService.DecodeImage(comment.BlogUser.ImageData, comment.BlogUser.ContentType)" alt="@comment.BlogUser.FullName" class="mr-3 mt-3 rounded-pill img-thumbnail " style="width:60px;">

            <div class="media-body">
                <h4>@comment.BlogUser.FullName</h4>

                @****************************************************************
                    SECTION 1: POST ON OR UPDATED ON
                    *****************************************************************@
                @if (comment.Deleted is not null)
                {
                    <span class="small">
                        <span class="font-weight-bolder">Deleted</span> : @comment.Deleted?.ToString("MMM dd, yyyy")
                    </span>
                }
                else if (comment.Moderated is not null)
                {
                    <span class="small">
                        <span class="font-weight-bolder">
                            Moderated <span class="text-danger font-italic">(@comment.ModerationType.ToString().ToLower())</span>
                        </span>
                        : @comment.Moderated?.ToString("MMM dd, yyyy")
                    </span>
                }
                else if (comment.Updated is not null)
                {
                    <span class="small">
                        <span class="font-weight-bolder">Updated </span> : @comment.Updated?.ToString("MMM dd, yyyy")
                    </span>
                }
                else
                {
                    <span class="small">
                        <span class="font-weight-bolder">Created </span> : @comment.Created.ToString("MMM dd, yyyy")
                    </span>
                }

                @*****************************************************************
                    SECTION 2: HOW DO WE COMPOSE THE BODY
                    *****************************************************************@
                @*****************************************************************
                    SECTION 2A: Render pre text
                    *****************************************************************@
                <br />
                @if (comment.Deleted is not null)
                {
                    <span class="small font-italic">The comment posted on @comment.Created.ToString("MMM dd, yyyy") by @comment.BlogUser.FullName was deleted by the Moderator...</span>
                }
                else if (comment.Moderated is not null)
                {
                    <span class="small font-italic">The comment posted on @comment.Created.ToString("MMM dd, yyyy") by @comment.BlogUser.FullName has been Moderated...</span>
                }

                <hr />

                @*****************************************************************
                    SECTION 2B: Render main body
                    *****************************************************************@
                @if (string.IsNullOrEmpty(comment.Body))
                {
                    <span class="small font-italic">Comment not available...</span>
                }
                else if (comment.Moderated is not null)
                {
                    @comment.ModeratedBody
                }
                else if (comment.Deleted is null)
                {
                    @comment.Body
                }


                @****************************************************************
                        SECTION 3: CAN WE RENDER THE EDIT BUTTON
                    *****************************************************************@
                @if (comment.Moderated is null && comment.Deleted is null && comment.BlogUserId == _userManager.GetUserId(User))
                {
                    <hr>
                    <button data-toggle="modal" data-target="#editModal" class="btn-sm btn-dark float-right font-weight-bold">EDIT</button>
                }

                @****************************************************************
                    SECTION 4: CAN WE RENDER THE MODERATE AND DELETE BUTTONS
                    *****************************************************************@
                @if (User.IsInRole(BlogRole.Moderator.ToString()) && comment.Deleted is null)
                {
                    <hr>
                    <div class="row">
                        <div class="col-2">
                            <button class="btn-sm btn-dark font-weight-bold btn-block" data-toggle="modal" data-target="#moderate">MODERATE</button>
                        </div>
                        <div class="col-2">
                            <form asp-action="Delete" asp-controller="Comments">
                                @Html.Hidden("CommentId", comment.Id)
                                @Html.Hidden("Slug", comment.Post.Slug)
                                <button class="btn-sm btn-dark font-weight-bold btn-block">DELETE</button>
                            </form>
                        </div>
                    </div>
                }

            </div>

        </div>


        @*Modals*@
        <div class="modal" id="editModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Editing Comment...</h4>

                    </div>

                    <!-- Modal body -->
                    <div class="modal-body">
                        <form asp-action="Edit" asp-controller="Comments">
                            @Html.Hidden("Id", comment.Id)

                            <div class="form-group">
                                <textarea name="Body" class="form-control" required>@comment.Body</textarea>
                            </div>

                            <button class="btn-sm btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>
                        </form>
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn-sm btn-dark font-weight-bold" data-dismiss="modal">CLOSE</button>
                    </div>

                </div>
            </div>
        </div>

        <div class="modal" id="moderate">
            <div class="modal-dialog">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title">Moderating Comment...</h4>

                    </div>

                    <!-- Modal body -->
                    <div class="modal-body">
                        <form asp-action="Moderate" asp-controller="Comments">
                            @Html.Hidden("Id", comment.Id)
                            @Html.Hidden("Body", comment.Body)

                            <div class="form-group">
                                <label class="control-label">Original Comment</label>
                                <textarea disabled class="form-control" style="resize:none">@comment.Body</textarea>
                            </div>

                            <div class="form-group">
                                <label class="control-label">Moderated Comment</label>
                                <textarea required name="ModeratedBody" class="form-control">@comment.ModeratedBody</textarea>
                            </div>

                            <div class="form-group">
                                <label class="control-label">Reason For Moderation</label>
                                <select class="form-control" asp-for="@comment.ModerationType" name="ModerationType" asp-items="Html.GetEnumSelectList<ModerationType>()"></select>
                            </div>

                            <div class="form-group">
                                <div class="row">
                                    <div class="col">
                                        <button class="btn-sm btn-block btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>
                                    </div>
                                    <div class="col">
                                        <button class="btn-sm btn-block btn-dark font-weight-bold" type="button" data-dismiss="modal">CLOSE</button>
                                    </div>
                                </div>
                            </div>

                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

























@*
    @{
        ViewData["Title"] = "Details";
    }

    <!-- Post Content-->
    <article class="mb-4">
        <div class="container px-4 px-lg-5">
            <div class="row gx-4 gx-lg-5 justify-content-center">
                <div class="col-md-10 col-lg-8 col-xl-7">
                    @Html.Raw(Model.Content)
                </div>
            </div>
        </div>
    </article>

    <hr />
    <article>
        <div class="row">
            <div class="col text-center h3 font-weight-bold">
                Custom Post Tags
            </div>
        </div>
        <div class="row">
            <div class="col text-center">
                @foreach (var tag in Model.Tags)
                {
                    /*Showing all the posts that have that specific tag: asp-action*/
                    //TODO: Create the TagIndex to show posts by tags
                    <a class="btn btn-warning btn-sm btn-outline-dark" asp-action="TagIndex" asp-route-tag="@tag.Text.ToLower()">#@tag.Text</a>
                }
            </div>
        </div>
    </article>
    <hr />

    <div>
        @if (User.Identity.IsAuthenticated)
        {
            <form asp-action="Create" asp-controller="Comments" method="post">
                @Html.Hidden("PostId", Model.Id)
                <div class="form-group">
                    <label class="h2 control-label font-weight-bold"> Add a Comment</label>
                    <textarea name="body" class="form-control" rows="10"></textarea>
                </div>
                <button type="submit" class="btn btn-dark w-100 btn-sm">Submit</button>
            </form>
        }
        else
        {
            <a class="btn btn-sm btn-dark w-100" asp-area="Identity" asp-page="/Account/Login">Login to add comments</a>
        }
    </div>

    <button id="commentSection" class="btn btn-sm btn-dark w-100">@Model.Comments.Count Comment(s)</button>

    $1$ TODO: Separate columns for picture side by side with the comment #1#
    @foreach (var comment in Model.Comments)
    {
        <div class="media media-border p-0 mb-2 bg-light">
            <img class="mr-3 mt-3 rounded-circle" style="width: 60px;" src="@_imageService.DecodeImage(comment.BlogUser.ImageData, comment.BlogUser.ContentType)" />
            <div class="media-body">
                <h4>@comment.BlogUser.FullName</h4>
                <small>
                    <i>
                        @if (comment.Moderated is not null)
                        {
                            <span class="small">
                                <span class="font-weight-bolder">
                                    Moderated <span class="text-danger font-italic">(@comment.ModerationType.ToString())</span>
                                </span>
                                : @comment.Moderated?.ToString("MMM dd, yyyy")
                            </span>
                        }
                        else
                        {
                            <span class="small font-italic">Posted on @comment.Created.ToString("MMM dd, yyy")</span>
                        }
                    </i>
                </small>

                @if (string.IsNullOrEmpty(comment.Body))
                {

                }
                else if (comment.Moderated is not null)
                {
                    <p>@comment.ModeratedBody</p>
                }
                else if (comment.Deleted is null)
                {
                    <p>@comment.Body</p>
                }


                $1$ ******************************* Render the edit button ******************************#1#
                @if (comment.Moderated is null && comment.Deleted is null && comment.BlogUserId == _userManager.GetUserId(User))
                {
                    <hr />
                    <button data-bs-toggle="modal" data-bs-target="#editModal-@comment.Id" class="btn btn-sm btn-dark float-right font-weight-bold">EDIT</button>
                }

                $1$ ******************************* Render the moderate and delete buttons ******************************#1#
                @if (User.IsInRole(BlogRole.Moderator.ToString()) && comment.Deleted is null)
                {
                    <hr />
                    <div class="row">
                        <div class="col-2">
                            <button class="btn btn-sm btn-dark font-weight-bold w-100" data-bs-toggle="modal" data-bs-target="#moderateModal-@comment.Id">MODERATE</button>
                        </div>
                        <div class="col-2">
                            <form asp-action="Delete" asp-controller="Comments">
                                @Html.Hidden("Id", comment.Id)
                                @Html.Hidden("Slug", comment.Post.Slug)
                                <button class="btn-sm btn-dark font-weight-bold w-100">DELETE</button>
                            </form>
                        </div>

                    </div>
                }
            </div>
        </div>

        // Modals
        <div class="modal" id="editModal-@comment.Id">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Editing Comment...</h4>
                    </div>

                    <!-- Modal Body-->
                    <div class="modal-body">
                        <form asp-action="Edit" asp-controller="Comments">
                            @Html.Hidden("Id", comment.Id)

                            <div class="form-group">
                                <textarea name="Body" class="form-control" required>@comment.Body</textarea>
                            </div>

                            <button class="btn btn-sm btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>
                        </form>
                    </div>

                    <!-- Modal Footer-->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-sm btn-dark font-weight-bold" data-bs-dismiss="modal">CLOSE</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal" id="moderateModal-@comment.Id">
            <div class="modal-dialog">
                <div class="modal-content">

                    <div class="modal-header">
                        <h5 class="modal-title" id="modalTitle-@comment.Id">Moderating Comment...</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>

                    </div>

                    <div class="modal-body">
                        <form asp-action="Moderate" asp-controller="Comments">
                            @Html.Hidden("Id", comment.Id)
                            @Html.Hidden("Body", comment.Body)

                            <div class="form-group">
                                <label class="control-label">Original Comment</label>
                                <textarea disabled class="form-control" style="resize: none">@comment.Body</textarea>
                            </div>

                            <div class="form-group">
                                <label class="control-label">Moderated Comment</label>
                                <textarea required name="ModeratedBody" class="form-control" style="resize: none">@comment.ModeratedBody</textarea>
                            </div>

                            <div class="form-group">
                                <label class="control-label">Reason For Moderation</label>
                                <select class="form-control" asp-for="@comment.ModerationType" name="ModerationType" asp-items="Html.GetEnumSelectList(typeof(ModerationType))"></select>
                            </div>

                            <div class="form-group">
                                <div class="row">
                                    <div class="col">
                                        <button class="btn btn-sm w-100 btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>
                                    </div>
                                    <div class="col">
                                        <button class="btn btn-sm w-100 btn-dark border-success font-weight-bold" data-bs-dismiss="modal">CLOSE</button>
                                    </div>
                                </div>
                            </div>

                        </form>
                    </div>

                </div>
            </div>
        </div>
    }*@


<!-- Displaying comments related to the post-->
<!-- Display image of content''s author-->
@*<p>Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.</p>
    <p>Science cuts two ways, of course; its products can be used for both good and evil. But there's no turning back from science. The early warnings about technological dangers also come from science.</p>
    <p>What was most significant about the lunar voyage was not that man set foot on the Moon but that they set eye on the earth.</p>
    <p>A Chinese tale tells of some men sent to harm a young girl who, upon seeing her beauty, become her protectors rather than her violators. That's how I felt seeing the Earth for the first time. I could not help but love and cherish her.</p>
    <p>For those who have seen the Earth from space, and for the hundreds and perhaps thousands more who will, the experience most certainly changes your perspective. The things that we share in our world are far more valuable than those which divide us.</p>
    <h2 class="section-heading">The Final Frontier</h2>
    <p>There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.</p>
    <p>There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.</p>
    <blockquote class="blockquote">The dreams of yesterday are the hopes of today and the reality of tomorrow. Science has not yet mastered prophecy. We predict too much for the next year and yet far too little for the next ten.</blockquote>
    <p>Spaceflights cannot be stopped. This is not the work of any one man or even a group of men. It is a historical process which mankind is carrying out in accordance with the natural laws of human development.</p>
    <h2 class="section-heading">Reaching for the Stars</h2>
    <p>As we got further and further away, it [the Earth] diminished in size. Finally it shrank to the size of a marble, the most beautiful you can imagine. That beautiful, warm, living object looked so fragile, so delicate, that if you touched it with a finger it would crumble and fall apart. Seeing this has to change a man.</p>
    <a href="#!"><img class="img-fluid" src="/assets/img/post-sample-image.jpg" alt="..." /></a>
    <span class="caption text-muted">To go places and do things that have never been done before – that’s what living is all about.</span>
    <p>Space, the final frontier. These are the voyages of the Starship Enterprise. Its five-year mission: to explore strange new worlds, to seek out new life and new civilizations, to boldly go where no man has gone before.</p>
    <p>As I stand out here in the wonders of the unknown at Hadley, I sort of realize there’s a fundamental truth to our nature, Man must explore, and this is exploration at its greatest.</p>
    <p>
        Placeholder text by
        <a href="http://spaceipsum.com/">Space Ipsum</a>
        &middot; Images by
        <a href="https://www.flickr.com/photos/nasacommons/">NASA on The Commons</a>
    </p>*@